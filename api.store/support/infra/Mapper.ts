/**
 * Интерфейс IMapper представляет собой контракт для объектов-мапперов, которые отвечают за преобразование
 * между представлением данных в базе данных (персистенция) и объектами доменной модели.
 *
 * @interface
 * @template T - Тип объекта доменной модели.
 */
export default interface IMapper<T> {
	/**
	 * Метод toPersistence преобразует объект доменной модели в формат данных, подходящий для сохранения
	 * или передачи в хранилище данных (например, базу данных).
	 *
	 * @param {T} t - Объект доменной модели, который нужно преобразовать.
	 * @returns {any} - Представление объекта для сохранения в хранилище данных.
	 */
	toPersistence(t: T): any

	/**
	 * Метод toDomain преобразует данные из хранилища (например, из базы данных) в объект доменной модели.
	 *
	 * @param {any} raw - Данные из хранилища, которые нужно преобразовать в объект доменной модели.
	 * @returns {T} - Объект доменной модели, созданный на основе предоставленных данных.
	 */
	toDomain(raw: any): T
}
